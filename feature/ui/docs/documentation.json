{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-9a3da8885728b96dc0caa85e58800abbc9fa3f6f753842e7d3167cbbdb081ccbf980620e083960c4de27408bae7d597e15a4d262c972603a1600965a42ad9d15",
            "file": "feature/ui/src/lib/ui/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Button",
            "styleUrls": [],
            "styles": [],
            "template": "<button hlmBtn [variant]=\"variant\" [size]=\"size\">\n  <ng-content></ng-content>\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"default\" | \"sm\" | \"lg\" | \"icon\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"secondary\" | \"destructive\" | \"outline\" | \"ghost\" | \"link\" | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { HlmButtonDirective } from '@spartan-ng/ui-button-helm';\n\n@Component({\n  selector: 'Button',\n  standalone: true,\n  imports: [HlmButtonDirective],\n  template: `\n  <button hlmBtn [variant]=\"variant\" [size]=\"size\">\n    <ng-content></ng-content>\n  </button> `,\n})\nexport class ButtonComponent {\n  @Input() variant: 'secondary' | 'destructive' | 'outline' | 'ghost' | 'link' | 'default' = 'default';\n  @Input() size: 'default' | 'sm' | 'lg' | 'icon' = 'default';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-132a32816fbebd88f91a04b4396fc2993d986f610501e954b3c39d8fcc917628e389c0ad76c8e02f7dda4660839ef7b4f8a4ba31d27932bdc40fff2c7299c166",
            "file": "feature/ui/src/lib/ui/components/card/partials/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Card",
            "styleUrls": [],
            "styles": [],
            "template": "<div hlmCard [class]=\"class\">\n  <ng-content />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "'w-[420px]'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nadd tailwind classes to override defaults (e.g. 'text-2xl p-2')\n",
                    "description": "<p>add tailwind classes to override defaults (e.g. &#39;text-2xl p-2&#39;)</p>\n",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmCardDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { HlmCardDirective } from '@spartan-ng/ui-card-helm';\n\n@Component({\n  selector: 'Card',\n  standalone: true,\n  imports: [HlmCardDirective],\n  template: `\n    <div hlmCard [class]=\"class\">\n      <ng-content />\n    </div>\n  `,\n})\nexport class CardComponent {\n  /**\n   * add tailwind classes to override defaults (e.g. 'text-2xl p-2')\n   */\n  @Input() class = 'w-[420px]';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CardContentComponent",
            "id": "component-CardContentComponent-23bf940592a99a99b167065d0e52df45d966f9d928268d4af93b65289a554bc0ba48c1b101eb84d34fd6a2e12143300ef8b1fed99a315f1a4f164b7a575eb043",
            "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "CardContent",
            "styleUrls": [],
            "styles": [],
            "template": "<div hlmCardContent [class]=\"contentClass\">\n  <ng-content />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "contentClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nadd tailwind classes to override defaults (e.g. 'text-2xl p-2')\n",
                    "description": "<p>add tailwind classes to override defaults (e.g. &#39;text-2xl p-2&#39;)</p>\n",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmCardContentDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { HlmCardContentDirective } from '@spartan-ng/ui-card-helm';\n\n@Component({\n  selector: 'CardContent',\n  standalone: true,\n  imports: [HlmCardContentDirective],\n  template: `\n    <div hlmCardContent [class]=\"contentClass\">\n      <ng-content />\n    </div>\n  `\n})\nexport class CardContentComponent {\n  /**\n   * add tailwind classes to override defaults (e.g. 'text-2xl p-2')\n   */\n  @Input() contentClass = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CardDescriptionComponent",
            "id": "component-CardDescriptionComponent-3ef7e26a323e98f4d69f48d0674ccea837d44c731a80e06dac5d941eee79c7299017555e69c48cb0cb5ce08605bf6c4a096be1ec3c68a01d770b9ae96184399b",
            "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "CardDescription",
            "styleUrls": [],
            "styles": [],
            "template": "<p hlmCardDescription [class]=\"descriptionClass\">\n  <ng-content />\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "descriptionClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nadd tailwind classes to override defaults (e.g. 'text-2xl p-2')\n",
                    "description": "<p>add tailwind classes to override defaults (e.g. &#39;text-2xl p-2&#39;)</p>\n",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmCardDescriptionDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { HlmCardDescriptionDirective } from '@spartan-ng/ui-card-helm';\n\n@Component({\n  selector: 'CardDescription',\n  standalone: true,\n  imports: [HlmCardDescriptionDirective],\n  template: `\n    <p hlmCardDescription [class]=\"descriptionClass\">\n      <ng-content />\n    </p>\n  `\n})\nexport class CardDescriptionComponent {\n  /**\n   * add tailwind classes to override defaults (e.g. 'text-2xl p-2')\n   */\n  @Input() descriptionClass = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CardFooterComponent",
            "id": "component-CardFooterComponent-71ec29db93a0a1c3c537fd6ca7396734e3e7f6dcd3086e212bdecc5ebb63307d23b2303f510789556b3eca4b427e397ac29b99eb09b396eb19ad0762bc530994",
            "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "CardFooter",
            "styleUrls": [],
            "styles": [],
            "template": "<div hlmCardFooter [class]=\"footerClass\">\n  <ng-content />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "footerClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nadd tailwind classes to override defaults (e.g. 'text-2xl p-2')\n",
                    "description": "<p>add tailwind classes to override defaults (e.g. &#39;text-2xl p-2&#39;)</p>\n",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmCardFooterDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { HlmCardFooterDirective } from '@spartan-ng/ui-card-helm';\n\n@Component({\n  selector: 'CardFooter',\n  standalone: true,\n  imports: [HlmCardFooterDirective],\n  template: `\n    <div hlmCardFooter [class]=\"footerClass\">\n      <ng-content />\n    </div>\n  `\n})\nexport class CardFooterComponent {\n  /**\n   * add tailwind classes to override defaults (e.g. 'text-2xl p-2')\n   */\n  @Input() footerClass = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CardHeaderComponent",
            "id": "component-CardHeaderComponent-ebeba765b1db0644097ba74e78d5d76fa6c3587a41b50d7ea2f9392a179f508910020ecc731e852aa4a79a7a6a694e3bde24395e98840510c98f56648d1a01f1",
            "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "CardHeader",
            "styleUrls": [],
            "styles": [],
            "template": "<div hlmCardHeader [class]=\"headerClass\">\n  <ng-content />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "headerClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmCardHeaderDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { HlmCardHeaderDirective } from '@spartan-ng/ui-card-helm';\n\n@Component({\n  selector: 'CardHeader',\n  standalone: true,\n  imports: [HlmCardHeaderDirective],\n  template: `\n    <div hlmCardHeader [class]=\"headerClass\">\n      <ng-content />\n    </div>\n  `\n})\nexport class CardHeaderComponent {\n  @Input() headerClass = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CardTitleComponent",
            "id": "component-CardTitleComponent-eeed95fe8b59a4497c656932bda255273c4f5814365f699fbd303b90960c3379208b1ade892cb12b5bc72056979b030ca72ae7ab4f6483e8ca813e92cb7904b6",
            "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "CardTitle",
            "styleUrls": [],
            "styles": [],
            "template": "<h3 hlmCardTitle [class]=\"class\">\n  <ng-content />\n</h3>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "'text-4xl'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nadd tailwind classes to override defaults (e.g. 'text-2xl p-2')\n",
                    "description": "<p>add tailwind classes to override defaults (e.g. &#39;text-2xl p-2&#39;)</p>\n",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmCardTitleDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, model } from '@angular/core';\nimport { HlmCardTitleDirective } from '@spartan-ng/ui-card-helm';\n\n@Component({\n  selector: 'CardTitle',\n  standalone: true,\n  imports: [HlmCardTitleDirective],\n  template: `\n    <h3 hlmCardTitle [class]=\"class\">\n      <ng-content />\n    </h3>\n  `\n})\nexport class CardTitleComponent {\n  /**\n   * add tailwind classes to override defaults (e.g. 'text-2xl p-2')\n   */\n  @Input() class = 'text-4xl';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-bf3abd6d0427e9afde48126d089012b97a3f4e8303fb618aadb1b6ae39c5a7272e1861ad3a4ab773e5bc5188ebfb602695bf4e7e88660960106e65f9f7dba9be",
            "file": "feature/ui/src/lib/ui/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: ICONS, useValue: {\n        lucideMail: , lucideUser2: , lucideUsers2: ,\n    }\n}"
                },
                {
                    "name": "provideIcons({\n    lucideMail, lucideUser2, lucideUsers2, lucideActivity, lucideTruck, lucideTrain,\n})"
                }
            ],
            "selector": "Icon",
            "styleUrls": [],
            "styles": [],
            "template": "<hlm-icon\n  [name]=\"name\"\n  [size]=\"size\"\n  [color]=\"color\"\n  [strokeWidth]=\"strokeWidth\"\n  [class]=\"class\"></hlm-icon>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 41,
                    "type": "IconName",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "IconSize",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icons",
                    "defaultValue": "inject(ICONS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | IconName>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "HlmIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, inject } from '@angular/core';\nimport { HlmIconComponent, IconSize } from '@spartan-ng/ui-icon-helm';\nimport { provideIcons, IconName } from '@ng-icons/core';\nimport { lucideMail, lucideUser2, lucideUsers2, lucideActivity, lucideTruck, lucideTrain } from '@ng-icons/lucide';\nimport { ICONS } from './icon.token';\n\n@Component({\n  selector: 'Icon',\n  standalone: true,\n  imports: [HlmIconComponent],\n  providers: [\n    {\n      provide: ICONS,\n      useValue: {\n        lucideMail: 'lucideMail',\n        lucideUser2: 'lucideUser2',\n        lucideUsers2: 'lucideUsers2',\n      }\n    },\n    provideIcons({\n      lucideMail,\n      lucideUser2,\n      lucideUsers2,\n      lucideActivity,\n      lucideTruck,\n      lucideTrain,\n    }),\n  ],\n  template: `\n    <hlm-icon\n      [name]=\"name\"\n      [size]=\"size\"\n      [color]=\"color\"\n      [strokeWidth]=\"strokeWidth\"\n      [class]=\"class\"></hlm-icon>\n  `,\n})\nexport class IconComponent {\n  private icons: Record<string, IconName> = inject(ICONS);\n  @Input({ required: true }) name!: IconName; // Required\n  @Input() size: IconSize = 'none';\n  @Input() color?: string;\n  @Input() strokeWidth?: string | number;\n  @Input() class?: string;\n}\n\n// import { Component, Input, OnInit } from '@angular/core';\n// import { CommonModule } from '@angular/common';\n// import { HlmIconComponent } from '@spartan-ng/ui-icon-helm';\n// import { provideIcons, IconName } from '@ng-icons/core';\n// import * as lucideIcons from '@ng-icons/lucide';\n\n// @Component({\n//   selector: 'mantis-icon',\n//   standalone: true,\n//   imports: [CommonModule, HlmIconComponent],\n//   template: `\n//     <hlm-icon\n//       *ngIf=\"icon\"\n//       [size]=\"size\"\n//       [color]=\"color\"\n//       [strokeWidth]=\"strokeWidth\"\n//       [name]=\"iconName\"\n//     >\n//     </hlm-icon>\n//   `,\n// })\n// export class IconComponent implements OnInit {\n//   @Input() iconName!: string;\n//   @Input() size: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | 'none' = 'base';\n//   @Input() color: string | undefined = undefined;\n//   @Input() strokeWidth: string | number | undefined = undefined;\n\n//   icon: typeof lucideIcons[keyof typeof lucideIcons] | undefined;\n\n//   async ngOnInit() {\n//     if (this.iconName) {\n//       this.icon = lucideIcons[this.iconName as keyof typeof lucideIcons];\n//       provideIcons({ [this.iconName]: this.icon });\n//     }\n//   }\n// }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "IconListComponent",
            "id": "component-IconListComponent-83c55d881270963a7b2d0594b4050a8b90c8ef529c66d734ef498d25c585949fc019f2358442597568e3ec6aad1d304608f2ead88e1f9209e1c94814c831a5c8",
            "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({\n    lucideMail, lucideUser2, lucideActivity, lucideAccessibility, lucideBackpack, lucideApple, lucideAlarmCheck, lucideAlarmClock, lucideTrain, lucideTrash, lucideTornado, lucideTruck, lucideTv, lucideTrophy, lucidePlane, lucideShield, lucideShip, lucideShoppingCart, lucideShoppingBag, lucideSettings, lucideSearch, lucideScissors, lucideBarChart, lucideBattery, lucideDatabase, lucideCloud, lucideCamera, lucideCalendar, lucideBook, lucideBell, lucideLasso, lucideTicket, lucideThumbsUp, lucideTrees, lucideWrench\n})"
                }
            ],
            "selector": "IconList",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"grid grid-cols-7 gap-4 max-w-lg mx-auto mb-4\">\n  <Button *ngFor=\"let icon of icons\" variant=\"outline\" class=\"flex justify-center items-center\" size=\"icon\">\n    <Icon [name]=\"icon\" size=\"sm\" class=\"flex\" />\n    <span class=\"sr-only\">{{ icon }}</span>\n  </Button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icons",
                    "defaultValue": "[\n    'lucideMail',\n    'lucideUser2',\n    'lucideActivity',\n    'lucideAccessibility',\n    'lucideBackpack',\n    'lucideApple',\n    'lucideAlarmCheck',\n    'lucideAlarmClock',\n    'lucideTrain',\n    'lucideTrash',\n    'lucideTornado',\n    'lucideTruck',\n    'lucideTv',\n    'lucideTrophy',\n    'lucidePlane',\n    'lucideShield',\n    'lucideShip',\n    'lucideShoppingCart',\n    'lucideShoppingBag',\n    'lucideSettings',\n    'lucideSearch',\n    'lucideScissors',\n    'lucideBarChart',\n    'lucideBattery',\n    'lucideDatabase',\n    'lucideCloud',\n    'lucideCamera',\n    'lucideCalendar',\n    'lucideBook',\n    'lucideBell',\n    'lucideLasso',\n    'lucideTicket',\n    'lucideThumbsUp',\n    'lucideTrees',\n    'lucideWrench'\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconName[]",
                    "optional": false,
                    "description": "",
                    "line": 98
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from '../icon.component';\nimport { ButtonComponent } from '../../button/button.component';\nimport { provideIcons, IconName } from '@ng-icons/core';\nimport {\n  lucideMail,\n  lucideUser2,\n  lucideActivity,\n  lucideAccessibility,\n  lucideBackpack,\n  lucideApple,\n  lucideAlarmCheck,\n  lucideAlarmClock,\n  lucideTrain,\n  lucideTrash,\n  lucideTornado,\n  lucideTruck,\n  lucideTv,\n  lucideTrophy,\n  lucidePlane,\n  lucideShield,\n  lucideShip,\n  lucideShoppingCart,\n  lucideShoppingBag,\n  lucideSettings,\n  lucideSearch,\n  lucideScissors,\n  lucideBarChart,\n  lucideBattery,\n  lucideDatabase,\n  lucideCloud,\n  lucideCamera,\n  lucideCalendar,\n  lucideBook,\n  lucideBell,\n  lucideLasso,\n  lucideTicket,\n  lucideThumbsUp,\n  lucideTrees,\n  lucideWrench\n} from '@ng-icons/lucide';\n\n@Component({\n  selector: 'IconList',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent, IconComponent],\n  providers: [\n    provideIcons({\n      lucideMail,\n      lucideUser2,\n      lucideActivity,\n      lucideAccessibility,\n      lucideBackpack,\n      lucideApple,\n      lucideAlarmCheck,\n      lucideAlarmClock,\n      lucideTrain,\n      lucideTrash,\n      lucideTornado,\n      lucideTruck,\n      lucideTv,\n      lucideTrophy,\n      lucidePlane,\n      lucideShield,\n      lucideShip,\n      lucideShoppingCart,\n      lucideShoppingBag,\n      lucideSettings,\n      lucideSearch,\n      lucideScissors,\n      lucideBarChart,\n      lucideBattery,\n      lucideDatabase,\n      lucideCloud,\n      lucideCamera,\n      lucideCalendar,\n      lucideBook,\n      lucideBell,\n      lucideLasso,\n      lucideTicket,\n      lucideThumbsUp,\n      lucideTrees,\n      lucideWrench\n    }),\n  ],\n  template: `\n    <div class=\"grid grid-cols-7 gap-4 max-w-lg mx-auto mb-4\">\n      <Button *ngFor=\"let icon of icons\" variant=\"outline\" class=\"flex justify-center items-center\" size=\"icon\">\n        <Icon [name]=\"icon\" size=\"sm\" class=\"flex\" />\n        <span class=\"sr-only\">{{ icon }}</span>\n      </Button>\n    </div>\n  `,\n  styles: []\n})\nexport class IconListComponent {\n  icons: IconName[] = [\n    'lucideMail',\n    'lucideUser2',\n    'lucideActivity',\n    'lucideAccessibility',\n    'lucideBackpack',\n    'lucideApple',\n    'lucideAlarmCheck',\n    'lucideAlarmClock',\n    'lucideTrain',\n    'lucideTrash',\n    'lucideTornado',\n    'lucideTruck',\n    'lucideTv',\n    'lucideTrophy',\n    'lucidePlane',\n    'lucideShield',\n    'lucideShip',\n    'lucideShoppingCart',\n    'lucideShoppingBag',\n    'lucideSettings',\n    'lucideSearch',\n    'lucideScissors',\n    'lucideBarChart',\n    'lucideBattery',\n    'lucideDatabase',\n    'lucideCloud',\n    'lucideCamera',\n    'lucideCalendar',\n    'lucideBook',\n    'lucideBell',\n    'lucideLasso',\n    'lucideTicket',\n    'lucideThumbsUp',\n    'lucideTrees',\n    'lucideWrench'\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../**/*.stories.@(js|jsx|ts|tsx|mdx)'],\n  addons: [\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-themes',\n    'storybook-dark-mode',\n    'storybook-addon-data-theme-switcher'\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs',\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button works!',\n    variant: 'default',\n    size: 'lg',\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    contentClass: ''\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    descriptionClass: ''\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    footerClass: ''\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    headerClass: 'border border-dotted border-gray-300',\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    class: 'text-3xl'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    class: 'w-[500px]'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    icons: [\n      'lucideMail',\n      'lucideUser2',\n      'lucideActivity',\n      'lucideAccessibility',\n      'lucideBackpack',\n      'lucideApple',\n      'lucideAlarmCheck',\n      'lucideAlarmClock',\n      'lucideTrain',\n      'lucideTrash',\n      'lucideTornado',\n      'lucideTruck',\n      'lucideTv',\n      'lucideTrophy',\n      'lucidePlane',\n      'lucideShield',\n      'lucideShip',\n      'lucideShoppingCart',\n      'lucideShoppingBag',\n      'lucideSettings',\n      'lucideSearch',\n      'lucideScissors',\n      'lucideBarChart',\n      'lucideBattery',\n      'lucideDatabase',\n      'lucideCloud',\n      'lucideCamera',\n      'lucideCalendar',\n      'lucideBook',\n      'lucideBell',\n      'lucideLasso',\n      'lucideTicket',\n      'lucideThumbsUp',\n      'lucideTrees',\n      'lucideWrench'\n    ]\n  },\n}"
            },
            {
                "name": "Destructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Destructive works!',\n    variant: 'destructive',\n  },\n}"
            },
            {
                "name": "Ghost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Ghost works!',\n    variant: 'ghost',\n  },\n}"
            },
            {
                "name": "globalTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  dataThemes: {\n    defaultValue: {\n      list: [\n        { name: \"Zinc\", dataTheme: \"theme-default\", color: \"#212121\" },\n        { name: \"Red\", dataTheme: \"theme-red\", color: \"#ff1744\" },\n        { name: \"Green\", dataTheme: \"theme-green\", color: \"#32CD32\" },\n        { name: \"Orange\", dataTheme: \"theme-orange\", color: \"#ef6c00\" },\n        { name: \"Blue\", dataTheme: \"theme-blue\", color: \"#6A5ACD\" },\n      ],\n      dataAttribute: \"data-theme\",            // optional (default: \"data-theme\")\n      clearable: true,                        // optional (default: true)\n      toolbar: {\n        title: \"Change Theme\", // optional\n        icon: \"paintbrush\",                   // optional\n      },\n    } satisfies ThemeConfig,\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'lucideUser2',\n    size: 'base',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Link works!',\n    variant: 'link',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: ButtonComponent,\n  title: 'Components/Button/Button',\n  decorators: [\n    componentWrapperDecorator(ButtonComponent, ({ args }) => args),\n  ],\n  argTypes: {\n    variant: { control: { type: 'select' }, name: 'Button Variant', options: ['secondary', 'destructive', 'outline', 'ghost', 'link', 'default'] },\n    size: { control: { type: 'select' }, name: 'Button Size', options: ['default', 'sm', 'lg', 'icon'] },\n  },\n\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({ props: args, template: `${args.label}` }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconComponent>",
                "defaultValue": "{\n  component: IconComponent,\n  title: 'Components/Icon',\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardContentComponent,\n  title: 'Components/Card/Partials/CardContent',\n  argTypes: {\n    contentClass: { control: { type: 'text' }, name: 'Content Class', placeholder: 'add css classes' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardContent ${argsToTemplate(args)}>\n        <p>\n          Alice was beginning to get very tired of sitting by her sister on the\n          bank, and of having nothing to do: once or twice she had peeped into the\n          book her sister was reading, but it had no pictures or conversations in\n          it, “and what is the use of a book, ” thought Alice, “without pictures or\n          conversations?”\n        </p>\n      </CardContent>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardDescriptionComponent,\n  title: 'Components/Card/Partials/CardDescription',\n  argTypes: {\n    descriptionClass: { control: { type: 'text' }, name: 'Description Class', placeholder: 'add css classes' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardDescription ${argsToTemplate(args)}>\n      Alice in Wonderland\n      <small>— Lewis Carroll</small>\n      </CardDescription>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardFooterComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [ButtonComponent]\n    })\n  ],\n  title: 'Components/Card/Partials/CardFooter',\n  argTypes: {\n    footerClass: { control: { type: 'text' }, name: 'Footer Class', placeholder: 'add css classes' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardFooter ${argsToTemplate(args)}>\n        <Button size=\"lg\">Add to bookmarks</Button>\n      </CardFooter>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardHeaderComponent,\n  title: 'Components/Card/Partials/CardHeader',\n  argTypes: {\n    headerClass: { control: { type: 'text' }, name: 'Header Class' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardHeader ${argsToTemplate(args)}>\n        <!-- <CardTitle>Add title</CardTitle> -->\n        <!-- <CardDescription>Add descriptio</CardDescription> -->\n      </CardHeader>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardTitleComponent,\n  title: 'Components/Card/Partials/CardTitle',\n  argTypes: {\n    class: { control: { type: 'text' }, name: 'Title Class' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardTitle ${argsToTemplate(args)}>\n        Down the Rabbit Hole\n      </CardTitle>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardComponent,\n  title: 'Components/Card/Partials/Card',\n  argTypes: {\n    class: { control: { type: 'text' }, name: 'Card Class' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <Card ${argsToTemplate(args)}>\n        <!--\n        // add CardHeader, CardDescription, etc. here\n        -->\n      </Card>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconListComponent>",
                "defaultValue": "{\n  title: 'Components/Icon/Icons List',\n  tags: ['autodocs'],\n  component: IconListComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Outline works!',\n    variant: 'outline',\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'light',\n        dark: 'dark',\n      },\n      defaultTheme: 'light',\n    }),\n    withThemeByDataAttribute({\n      themes: {\n        light: 'light',\n        dark: 'dark',\n      },\n      defaultTheme: 'light',\n      attributeName: 'data-mode',\n    }),\n    componentWrapperDecorator(\n      (story) => {\n        return `<div class=\"bg-background m-4 p-8\" style=\"margin: 0; padding: 2rem;\">${story}</div>`\n      },\n    )\n  ],\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      excludeDecorators: true,\n    },\n    options: {\n      storySort: {\n        order: ['Atoms', ['Primitives', '*'], 'Molecules', 'Organisms', 'Pages', 'Others', '*'],\n      },\n    },\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'lucideMail',\n    size: 'base',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Heading works!',\n    variant: 'secondary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/button works!/gi)).toBeTruthy();\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconListComponent>",
                "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "CardHeaderComponent",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "feature/ui/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../**/*.stories.@(js|jsx|ts|tsx|mdx)'],\n  addons: [\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-themes',\n    'storybook-dark-mode',\n    'storybook-addon-data-theme-switcher'\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs',\n  }\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/button/button.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button works!',\n    variant: 'default',\n    size: 'lg',\n  }\n}"
                },
                {
                    "name": "Destructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Destructive works!',\n    variant: 'destructive',\n  },\n}"
                },
                {
                    "name": "Ghost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Ghost works!',\n    variant: 'ghost',\n  },\n}"
                },
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Link works!',\n    variant: 'link',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: ButtonComponent,\n  title: 'Components/Button/Button',\n  decorators: [\n    componentWrapperDecorator(ButtonComponent, ({ args }) => args),\n  ],\n  argTypes: {\n    variant: { control: { type: 'select' }, name: 'Button Variant', options: ['secondary', 'destructive', 'outline', 'ghost', 'link', 'default'] },\n    size: { control: { type: 'select' }, name: 'Button Size', options: ['default', 'sm', 'lg', 'icon'] },\n  },\n\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({ props: args, template: `${args.label}` }),\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Outline works!',\n    variant: 'outline',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Heading works!',\n    variant: 'secondary',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/button works!/gi)).toBeTruthy();\n  },\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    contentClass: ''\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardContentComponent,\n  title: 'Components/Card/Partials/CardContent',\n  argTypes: {\n    contentClass: { control: { type: 'text' }, name: 'Content Class', placeholder: 'add css classes' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardContent ${argsToTemplate(args)}>\n        <p>\n          Alice was beginning to get very tired of sitting by her sister on the\n          bank, and of having nothing to do: once or twice she had peeped into the\n          book her sister was reading, but it had no pictures or conversations in\n          it, “and what is the use of a book, ” thought Alice, “without pictures or\n          conversations?”\n        </p>\n      </CardContent>\n    `\n  }),\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    descriptionClass: ''\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardDescriptionComponent,\n  title: 'Components/Card/Partials/CardDescription',\n  argTypes: {\n    descriptionClass: { control: { type: 'text' }, name: 'Description Class', placeholder: 'add css classes' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardDescription ${argsToTemplate(args)}>\n      Alice in Wonderland\n      <small>— Lewis Carroll</small>\n      </CardDescription>\n    `\n  }),\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    footerClass: ''\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardFooterComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [ButtonComponent]\n    })\n  ],\n  title: 'Components/Card/Partials/CardFooter',\n  argTypes: {\n    footerClass: { control: { type: 'text' }, name: 'Footer Class', placeholder: 'add css classes' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardFooter ${argsToTemplate(args)}>\n        <Button size=\"lg\">Add to bookmarks</Button>\n      </CardFooter>\n    `\n  }),\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    headerClass: 'border border-dotted border-gray-300',\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardHeaderComponent,\n  title: 'Components/Card/Partials/CardHeader',\n  argTypes: {\n    headerClass: { control: { type: 'text' }, name: 'Header Class' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardHeader ${argsToTemplate(args)}>\n        <!-- <CardTitle>Add title</CardTitle> -->\n        <!-- <CardDescription>Add descriptio</CardDescription> -->\n      </CardHeader>\n    `\n  }),\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    class: 'text-3xl'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardTitleComponent,\n  title: 'Components/Card/Partials/CardTitle',\n  argTypes: {\n    class: { control: { type: 'text' }, name: 'Title Class' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <CardTitle ${argsToTemplate(args)}>\n        Down the Rabbit Hole\n      </CardTitle>\n    `\n  }),\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    class: 'w-[500px]'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  component: CardComponent,\n  title: 'Components/Card/Partials/Card',\n  argTypes: {\n    class: { control: { type: 'text' }, name: 'Card Class' },\n  },\n  parameters: {\n    docs: {\n      source: {\n        transform: (src: string) => {\n          const wrapperStriped = src.replace(/<div[^>]*>\\s*([\\s\\S]*?)\\s*<\\/div>/gi, '$1');\n          return wrapperStriped\n        }\n      }\n    }\n  },\n  render: (args: StoryArgs) => ({\n    props: args,\n    template: `\n      <Card ${argsToTemplate(args)}>\n        <!--\n        // add CardHeader, CardDescription, etc. here\n        -->\n      </Card>\n    `\n  }),\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    icons: [\n      'lucideMail',\n      'lucideUser2',\n      'lucideActivity',\n      'lucideAccessibility',\n      'lucideBackpack',\n      'lucideApple',\n      'lucideAlarmCheck',\n      'lucideAlarmClock',\n      'lucideTrain',\n      'lucideTrash',\n      'lucideTornado',\n      'lucideTruck',\n      'lucideTv',\n      'lucideTrophy',\n      'lucidePlane',\n      'lucideShield',\n      'lucideShip',\n      'lucideShoppingCart',\n      'lucideShoppingBag',\n      'lucideSettings',\n      'lucideSearch',\n      'lucideScissors',\n      'lucideBarChart',\n      'lucideBattery',\n      'lucideDatabase',\n      'lucideCloud',\n      'lucideCamera',\n      'lucideCalendar',\n      'lucideBook',\n      'lucideBell',\n      'lucideLasso',\n      'lucideTicket',\n      'lucideThumbsUp',\n      'lucideTrees',\n      'lucideWrench'\n    ]\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconListComponent>",
                    "defaultValue": "{\n  title: 'Components/Icon/Icons List',\n  tags: ['autodocs'],\n  component: IconListComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n}"
                }
            ],
            "feature/ui/.storybook/preview.ts": [
                {
                    "name": "globalTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  dataThemes: {\n    defaultValue: {\n      list: [\n        { name: \"Zinc\", dataTheme: \"theme-default\", color: \"#212121\" },\n        { name: \"Red\", dataTheme: \"theme-red\", color: \"#ff1744\" },\n        { name: \"Green\", dataTheme: \"theme-green\", color: \"#32CD32\" },\n        { name: \"Orange\", dataTheme: \"theme-orange\", color: \"#ef6c00\" },\n        { name: \"Blue\", dataTheme: \"theme-blue\", color: \"#6A5ACD\" },\n      ],\n      dataAttribute: \"data-theme\",            // optional (default: \"data-theme\")\n      clearable: true,                        // optional (default: true)\n      toolbar: {\n        title: \"Change Theme\", // optional\n        icon: \"paintbrush\",                   // optional\n      },\n    } satisfies ThemeConfig,\n  },\n}"
                },
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'light',\n        dark: 'dark',\n      },\n      defaultTheme: 'light',\n    }),\n    withThemeByDataAttribute({\n      themes: {\n        light: 'light',\n        dark: 'dark',\n      },\n      defaultTheme: 'light',\n      attributeName: 'data-mode',\n    }),\n    componentWrapperDecorator(\n      (story) => {\n        return `<div class=\"bg-background m-4 p-8\" style=\"margin: 0; padding: 2rem;\">${story}</div>`\n      },\n    )\n  ],\n  parameters: {\n    docs: {\n      inlineStories: false,\n      iframeHeight: 500,\n      excludeDecorators: true,\n    },\n    options: {\n      storySort: {\n        order: ['Atoms', ['Primitives', '*'], 'Molecules', 'Organisms', 'Pages', 'Others', '*'],\n      },\n    },\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'lucideUser2',\n    size: 'base',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/icon works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconComponent>",
                    "defaultValue": "{\n  component: IconComponent,\n  title: 'Components/Icon',\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'lucideMail',\n    size: 'base',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "feature/ui/src/lib/ui/components/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "CardHeaderComponent",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconListComponent>",
                    "file": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "feature/ui/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "globalTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Destructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ghost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-content.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardContentComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-description.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-description.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardDescriptionComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFooterComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardTitleComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/card/partials/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon-list/icon-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "feature/ui/src/lib/ui/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            }
        ]
    }
}